head(test)
test = test %>%
select(-Province.State, -Lat, -Long) %>%
melt(id.vars = "Country.Region")
names(test) = c("country", "date", "cumsum")
test = test %>%
mutate(date = as.character(date)) %>%
mutate(date = gsub("X", "", date)) %>%
mutate(date = as.Date(date, format = "%m.%d.%y")) %>%
group_by(country) %>%
arrange(date) %>%
unique() %>%
ungroup() %>%
group_by(country, date) %>%
mutate(cumsum = sum(cumsum)) %>%
unique()  %>%
group_by(country) %>%
mutate(nthday = seq(1, length(cumsum), 1)) %>%
filter(!is.na(cumsum)) %>%
mutate(lag = c(0, diff(cumsum))) %>%
ungroup() %>%
filter(country %in% c("US", "Italy", "Spain", "China"))
head(test)
test$country = as.character(test$country)
write.csv(test, "/Users/nancyorgan/Documents/personalsite/data/totalcases.csv", row.names = FALSE)
ggplot(test, aes(x = date, y = cumsum, group = country)) +
geom_line()
# ggplot(test, aes(x = date, y = lag, group = country)) +
#   geom_line(aes(color = country)) +
#   theme_bw()
# library("reshape2")
# library("dplyr")
# library("ggplot2")
# totalcases = read.csv("/Users/nancyorgan/Desktop/total_cases.csv")
# totalcases = melt(totalcases, id.vars = "date")
#
# totalcases = totalcases %>%
#   filter(!is.na(value)) %>%
#   group_by(variable) %>%
#   mutate(nthday = seq(1, length(value), 1))
#
# View(totalcases)
#
# write.csv(totalcases, "/Users/nancyorgan/Documents/personalsite/data/totalcases.csv", row.names = FALSE)
######################################################################
######################################################################
# test = read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
test = read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
head(test)
test = test %>%
select(-Province.State, -Lat, -Long) %>%
melt(id.vars = "Country.Region")
names(test) = c("country", "date", "cumsum")
test = test %>%
mutate(date = as.character(date)) %>%
mutate(date = gsub("X", "", date)) %>%
mutate(date = as.Date(date, format = "%m.%d.%y")) %>%
group_by(country) %>%
arrange(date) %>%
unique() %>%
ungroup() %>%
group_by(country, date) %>%
mutate(cumsum = sum(cumsum)) %>%
unique()  %>%
group_by(country) %>%
mutate(nthday = seq(1, length(cumsum), 1)) %>%
filter(!is.na(cumsum)) %>%
mutate(lag = c(0, diff(cumsum))) %>%
ungroup() %>%
filter(country %in% c("US", "Italy", "Spain", "China"))
head(test)
test$country = as.character(test$country)
write.csv(test, "/Users/nancyorgan/Documents/personalsite/data/totalcases.csv", row.names = FALSE)
ggplot(test, aes(x = date, y = cumsum, group = country)) +
geom_line()
# ggplot(test, aes(x = date, y = lag, group = country)) +
#   geom_line(aes(color = country)) +
#   theme_bw()
# library("reshape2")
# library("dplyr")
# library("ggplot2")
# totalcases = read.csv("/Users/nancyorgan/Desktop/total_cases.csv")
# totalcases = melt(totalcases, id.vars = "date")
#
# totalcases = totalcases %>%
#   filter(!is.na(value)) %>%
#   group_by(variable) %>%
#   mutate(nthday = seq(1, length(value), 1))
#
# View(totalcases)
#
# write.csv(totalcases, "/Users/nancyorgan/Documents/personalsite/data/totalcases.csv", row.names = FALSE)
######################################################################
######################################################################
# test = read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
test = read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
head(test)
test = test %>%
select(-Province.State, -Lat, -Long) %>%
melt(id.vars = "Country.Region")
names(test) = c("country", "date", "cumsum")
test = test %>%
mutate(date = as.character(date)) %>%
mutate(date = gsub("X", "", date)) %>%
mutate(date = as.Date(date, format = "%m.%d.%y")) %>%
group_by(country) %>%
arrange(date) %>%
unique() %>%
ungroup() %>%
group_by(country, date) %>%
mutate(cumsum = sum(cumsum)) %>%
unique()  %>%
group_by(country) %>%
mutate(nthday = seq(1, length(cumsum), 1)) %>%
filter(!is.na(cumsum)) %>%
mutate(lag = c(0, diff(cumsum))) %>%
ungroup() %>%
filter(country %in% c("US", "Italy", "Spain", "China"))
head(test)
test$country = as.character(test$country)
write.csv(test, "/Users/nancyorgan/Documents/personalsite/data/totalcases.csv", row.names = FALSE)
ggplot(test, aes(x = date, y = cumsum, group = country)) +
geom_line()
# ggplot(test, aes(x = date, y = lag, group = country)) +
#   geom_line(aes(color = country)) +
#   theme_bw()
# test = read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
test = read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
head(test)
# test = read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_19-covid-Confirmed.csv")
test = read.csv("https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv")
head(test)
View(test)
url = "https://www.sherwin-williams.com/homeowners/color/find-and-explore-colors/paint-colors-by-family/family/red"
webpage = read_html(url)
library('rvest')
library("e1071")
library("rgl")
library("misc3d")
library("data.table")
library("RImagePalette")
library("png")
library("magick")
library("jpeg")
library("dplyr")
url = "https://www.sherwin-williams.com/homeowners/color/find-and-explore-colors/paint-colors-by-family/family/red"
webpage = read_html(url)
ebpage %>% html_nodes('button')
webpage %>% html_nodes('button')
ebpage %>% html_nodes('ReactVirtualized__Grid__innerScrollContainer')
webpage %>% html_nodes('ReactVirtualized__Grid__innerScrollContainer')
names = webpage %>% html_nodes(css = '.ReactVirtualized__Grid__innerScrollContainer') #%>% html_nodes('span')
names
url = "https://www.sherwin-williams.com/homeowners/color/find-and-explore-colors/paint-colors-by-family/family/red"
webpage = read_html(url)
names = webpage %>% html_nodes(css = '.ReactVirtualized__Grid__innerScrollContainer') #%>% html_nodes('span')
names
names = webpage %>% html_nodes(css = '.color_wall_chunk') #%>% html_nodes('span')
webpage = read_html(url)
names = webpage %>% html_nodes(css = '.color_wall_chunk') #%>% html_nodes('span')
names
names = webpage %>% html_nodes('color_wall_chunk') #%>% html_nodes('span')
webpage = read_html(url)
names = webpage %>% html_nodes('color_wall_chunk') #%>% html_nodes('span')
names
webpage = read_html(url)
webpage %>% html_nodes('color_wall_chunk') #%>% html_nodes('span')
webpage = read_html(url)
webpage %>% html_nodes('.color_wall_chunk') #%>% html_nodes('span')
webpage = read_html(url)
webpage %>% html_nodes('div.color_wall_chunk') #%>% html_nodes('span')
webpage
webpage = read_html(url)
webpage %>% html_nodes(css = 'div.color_wall_chunk') #%>% html_nodes('span')
webpage = read_html(url)
webpage %>% html_nodes(css = 'div.color_wall_chunk') #%>% html_nodes('span')
webpage
webpage = read_html(url)
webpage %>% html_nodes(xpath = '//*[@id="prism-color-family-facet"]/div/div[1]/div[2]/div[1]/div/div/div[2]/div/div/button[1]') #%>% html_nodes('span')
webpage = read_html(url)
webpage %>% html_nodes(xpath = '//*[@id="prism-color-family-facet"]/div/div') #%>% html_nodes('span')
webpage = read_html(url)
webpage %>% html_nodes(xpath = '//*[@id="prism-color-family-facet"]') #%>% html_nodes('span')
webpage = read_html(url)
webpage %>% html_nodes(css = "button.color-swatch") %>%
names = gsub("<span>", "", names)
webpage = read_html(url)
webpage %>% html_nodes(css = "button.color-swatch")
webpage = read_html(url)
webpage
webpage = read_html(url)[1]
webpage %>% html_nodes(css = "button.color-swatch")
webpage = read_html(url)[[1]]
webpage %>% html_nodes(css = "button.color-swatch")
webpage = read_html(url)[[2]]
webpage %>% html_nodes(css = "button.color-swatch")
webpage = read_html(url)[[3]]
webpage %>% html_nodes(css = "button.color-swatch")
webpage = read_html(url)[[4]]
webpage %>% html_nodes(css = "button.color-swatch")
webpage = read_html(url)
webpage
webpage = read_html(url)
webpage %>% html_nodes("div.ReactVirtualized__Grid__innerScrollContainer") #%>%   html_nodes(css = "button.color-swatch")
webpage = read_html(url)
webpage %>% html_nodes(css="div.ReactVirtualized__Grid__innerScrollContainer") #%>%   html_nodes(css = "button.color-swatch")
groups = c("sheers", "whites", "nudes", "pinks", "corals", "reds", "purples",
"blues", "greens", "yellows", "grays", "metallics-and-glitters")
url <- list(
Revlon = 'https://www.revlon.com/nails/nail-color/revlon-nail-enamel?shade=adventurous',
Maybelline = 'https://www.maybelline.com.au/nail-makeup/nail-color/color-show-60-seconds-nail-lacquer/',
Maybelline2 = 'https://www.maybelline.com.au/nail-makeup/nail-color/super-stay-7-days',
NARS = 'https://www.narscosmetics.com/USA/milos-nail-polish/0607845036456.html?gclid=Cj0KCQjwl8XtBRDAARIsAKfwtxBiqFJw74nAgsr_bolu-Uojx7H7jBq-E6rET3DwUlBgaMudndeL96EaAkBtEALw_wcB&gclsrc=aw.ds',
Essie = 'https://www.essie.com/nail-polish/by-color/',
Dior = 'https://www.dior.com/en_us/products/beauty-Y0002959_F000355257-dior-vernis-couture-color-gel-shine-long-wear-nail-lacquer?gclid=Cj0KCQjwl8XtBRDAARIsAKfwtxAvCXrpqEGt2MfLk3Ta3xJMNDGAExmKGCkqlJ_RYPl-16DUg58BdpwaAj1pEALw_wcB&gclsrc=aw.ds',
Chanel = 'https://www.chanel.com/us/makeup/p/159705/le-vernis-longwear-nail-colour/',
YSL = 'https://www.yslbeautyus.com/makeup/nails/la-laque-couture/1023YSL.html',
YSL2 = "https://www.yslbeautyus.com/makeup/nails/la-laque-couture-fall-look-2019/113YSL.html?cgid=makeup-nails&dwvar_113YSL_color=118%20-%20Marron%20Sulfureux#start=3&cgid=makeup-nails",
Urban = 'https://www.urbanoutfitters.com/shop/uo-nail-polish',
Jhannah = 'https://jhannahjewelry.com/collections/nailpolish',
Louboutin = 'http://us.christianlouboutin.com/us_en/pluminette.html',
Orosa = 'https://orosabeauty.com/products/pre-fall-set',
ZOYA = 'https://www.zoya.com/content/category/Zoya_Nail_Polish.html'
)
webpage = read_html(url)
webpage %>% html_nodes(css="div#page") html_nodes(css="div.ReactVirtualized__Grid__innerScrollContainer") #%>%   html_nodes(css = "button.color-swatch")
webpage = read_html(url)
webpage = read_html(url)
webpage %>% html_nodes(css="div#page") #html_nodes(css="div.ReactVirtualized__Grid__innerScrollContainer") #%>%   html_nodes(css = "button.color-swatch")
webpage = read_html(url)
webpage = read_html(url)
url = "https://www.sherwin-williams.com/homeowners/color/find-and-explore-colors/paint-colors-by-family/family/red"
webpage = read_html(url)
webpage
webpage %>% html_nodes(css="div#page") #html_nodes(css="div.ReactVirtualized__Grid__innerScrollContainer") #%>%   html_nodes(css = "button.color-swatch")
webpage %>% html_nodes(css="div#page") %>% html_nodes(css="div.ReactVirtualized__Grid__innerScrollContainer") #%>%   html_nodes(css = "button.color-swatch")
webpage = read_html(url)
webpage %>% html_nodes(css="div#page") #html_nodes(css="div.ReactVirtualized__Grid__innerScrollContainer") #%>%   html_nodes(css = "button.color-swatch")
webpage %>% html_nodes(css="div#page")[1]
webpage = read_html(url)
webpage = webpage %>% html_nodes(css="div#page") #html_nodes(css="div.ReactVirtualized__Grid__innerScrollContainer") #%>%   html_nodes(css = "button.color-swatch")
webpage
webpage[1]
webpage = read_html(url)
webpage = webpage %>% html_nodes(css="div.color-wall-chunk") #html_nodes(css="div.ReactVirtualized__Grid__innerScrollContainer") #%>%   html_nodes(css = "button.color-swatch")
webpage = read_html(url)
webpage %>% html_nodes(css="div.color-wall-chunk") #html_nodes(css="div.ReactVirtualized__Grid__innerScrollContainer") #%>%   html_nodes(css = "button.color-swatch")
webpage = read_html(url)
webpage
View(webpage)
xml_child(xml_child(xml_child(xml_child(webpage, 2), 3), 1), 2)
?read_html
?html_nodes
webpage = read_html(url)
webpage %>% html_nodes("button") html_nodes(css="div.color-wall-chunk") #html_nodes(css="div.ReactVirtualized__Grid__innerScrollContainer") #%>%   html_nodes(css = "button.color-swatch")
webpage = read_html(url)
webpage %>% html_nodes("button") #html_nodes(css="div.color-wall-chunk") #html_nodes(css="div.ReactVirtualized__Grid__innerScrollContainer") #%>%   html_nodes(css = "button.color-swatch")
webpage = read_html(url)
webpage %>% html_nodes(css = "button.color-swatch") #html_nodes(css="div.color-wall-chunk") #html_nodes(css="div.ReactVirtualized__Grid__innerScrollContainer") #%>%   html_nodes(css = "button.color-swatch")
webpage = read_html(url)
webpage %>% html_nodes(css = "button .color-swatch") #html_nodes(css="div.color-wall-chunk") #html_nodes(css="div.ReactVirtualized__Grid__innerScrollContainer") #%>%   html_nodes(css = "button.color-swatch")
/html/body/div[5]/div[2]/div[3]/div/div[2]/div[5]/div/sw-prism-color-family-adapter/div/div/div/div[1]/div[2]/div[1]/div/div/div[2]/div/div/button[41]
webpage = read_html(url)
webpage %>% html_nodes(xpath = "/html/body/div[5]/div[2]/div[3]/div/div[2]/div[5]/div/sw-prism-color-family-adapter/div/div/div/div[1]/div[2]/div[1]/div/div/div[2]/div/div/button[41]") #html_nodes(css="div.color-wall-chunk") #html_nodes(css="div.ReactVirtualized__Grid__innerScrollContainer") #%>%   html_nodes(css = "button.color-swatch")
library("rvest")
webpage = read_html(url)
webpage %>% html_nodes(xpath = "/html/body/div[5]/div[2]/div[3]/div/div[2]/div[5]/div/sw-prism-color-family-adapter/div/div/div/div[1]/div[2]/div[1]/div/div/div[2]/div/div/button[41]") #html_nodes(css="div.color-wall-chunk") #html_nodes(css="div.ReactVirtualized__Grid__innerScrollContainer") #%>%   html_nodes(css = "button.color-swatch")
webpage %>% html_nodes(xpath = "/html/body/div[5]/div[2]/div[3]/div/div[2]/div[5]/div/sw-prism-color-family-adapter/div/div/div/div[1]/div[2]/div[1]/div/div/div[2]/div/div/") #html_nodes(css="div.color-wall-chunk") #html_nodes(css="div.ReactVirtualized__Grid__innerScrollContainer") #%>%   html_nodes(css = "button.color-swatch")
webpage = read_html(url)
webpage %>% html_nodes(xpath = "/html/body/div[5]/div[2]/div[3]/div/div[2]/div[5]/div/sw-prism-color-family-adapter/div/div/div/div[1]/div[2]/div[1]/div/div/div[2]/div/div/") #html_nodes(css="div.color-wall-chunk") #html_nodes(css="div.ReactVirtualized__Grid__innerScrollContainer") #%>%   html_nodes(css = "button.color-swatch")
webpage = read_html(url)
webpage %>% html_nodes("#prism-color-family-facet > div > div.color-wall-wrap > div.color-wall > div:nth-child(1) > div > div > div:nth-child(2) > div > div > button:nth-child(41)")
url
url = "/www.sherwin-williams.com/homeowners/color/find-and-explore-colors/paint-colors-by-family/family/red"
url = "www.sherwin-williams.com/homeowners/color/find-and-explore-colors/paint-colors-by-family/family/red"
webpage = read_html(url)
url = "http://www.sherwin-williams.com/homeowners/color/find-and-explore-colors/paint-colors-by-family/family/red"
webpage = read_html(url)
webpage %>% html_nodes("#prism-color-family-facet > div > div.color-wall-wrap > div.color-wall > div:nth-child(1) > div > div > div:nth-child(2) > div > div > button:nth-child(41)")
url <- list(
url = 'https://www.revlon.com/nails/nail-color/revlon-nail-enamel?shade=adventurous',
Maybelline = 'https://www.maybelline.com.au/nail-makeup/nail-color/color-show-60-seconds-nail-lacquer/',
Maybelline2 = 'https://www.maybelline.com.au/nail-makeup/nail-color/super-stay-7-days',
NARS = 'https://www.narscosmetics.com/USA/milos-nail-polish/0607845036456.html?gclid=Cj0KCQjwl8XtBRDAARIsAKfwtxBiqFJw74nAgsr_bolu-Uojx7H7jBq-E6rET3DwUlBgaMudndeL96EaAkBtEALw_wcB&gclsrc=aw.ds',
Essie = 'https://www.essie.com/nail-polish/by-color/',
Dior = 'https://www.dior.com/en_us/products/beauty-Y0002959_F000355257-dior-vernis-couture-color-gel-shine-long-wear-nail-lacquer?gclid=Cj0KCQjwl8XtBRDAARIsAKfwtxAvCXrpqEGt2MfLk3Ta3xJMNDGAExmKGCkqlJ_RYPl-16DUg58BdpwaAj1pEALw_wcB&gclsrc=aw.ds',
Chanel = 'https://www.chanel.com/us/makeup/p/159705/le-vernis-longwear-nail-colour/',
YSL = 'https://www.yslbeautyus.com/makeup/nails/la-laque-couture/1023YSL.html',
YSL2 = "https://www.yslbeautyus.com/makeup/nails/la-laque-couture-fall-look-2019/113YSL.html?cgid=makeup-nails&dwvar_113YSL_color=118%20-%20Marron%20Sulfureux#start=3&cgid=makeup-nails",
Urban = 'https://www.urbanoutfitters.com/shop/uo-nail-polish',
Jhannah = 'https://jhannahjewelry.com/collections/nailpolish',
Louboutin = 'http://us.christianlouboutin.com/us_en/pluminette.html',
Orosa = 'https://orosabeauty.com/products/pre-fall-set',
ZOYA = 'https://www.zoya.com/content/category/Zoya_Nail_Polish.html'
)
webpage <- read_html(url)
url
url = 'https://www.revlon.com/nails/nail-color/revlon-nail-enamel?shade=adventurous'
webpage <- read_html(url)
webpage
webpage %>% html_nodes(xpath = "//button") %>% html_attr("style")
webpage
url
webpage %>% html_nodes(xpath = "//button")
webpage %>% html_nodes()
webpage %>% html_nodes(css = "button.btn")
webpage
url = "http://www.sherwin-williams.com/homeowners/color/find-and-explore-colors/paint-colors-by-family/family/red"
webpage = read_html(url)
webpage = read_html(url)
webpage
?read_xml
url
webpage = xml(url)
webpage = read_xml(url)
url
webpage = read_xml(url)
webpage = read_html(url)
webpage
webpage = read_html(url)
webpage
?html_nodes
webpage = read_html(url)
webpage %>% html_nodes(xpath = "/html/body/div[5]/div[2]/div[3]/div/div[2]/div[5]/div/sw-prism-color-family-adapter/div/div/div/div[1]/div[2]/div[1]/div/div/div[2]/div/div/button[42]")
#Loading both the required libraries
library(rvest)
library(V8)
#URL with js-rendered content to be scraped
link <- 'https://food.list.co.uk/place/22191-brewhemia-edinburgh/'
#Read the html page content and extract all javascript codes that are inside a list
emailjs <- read_html(link) %>% html_nodes('li') %>% html_nodes('script') %>% html_text()
# Create a new v8 context
ct <- v8()
#parse the html content from the js output and print it as text
read_html(ct$eval(gsub('document.write','',emailjs))) %>%
html_text()
ct
read_html(ct)
emailjs
url = "http://www.sherwin-williams.com/homeowners/color/find-and-explore-colors/paint-colors-by-family/family/red"
#Read the html page content and extract all javascript codes that are inside a list
emailjs <- read_html(url) %>% html_nodes(css = "button.color-swatch") %>% html_nodes('script') %>% html_text()
# Create a new v8 context
ct <- v8()
ct
#parse the html content from the js output and print it as text
read_html(ct$eval(gsub('document.write','',emailjs))) %>%
html_text()
#parse the html content from the js output and print it as text
read_html(ct)
#parse the html content from the js output and print it as text
read_html(ct$eval())
webpage = read_html(url)
webpage = read_html(url)
webpage %>% html_text()
webpage %>% html_text() %>% html_nodes("button")
webpage = read_html(url)
webpage %>% html_text() %>% html_nodes("button")
webpage = read_html(url)
webpage %>% html_nodes("button") %>% html_text()
webpage = read_html(url)
webpage %>% html_nodes("button.color-swatch") %>% html_text()
#URL with js-rendered content to be scraped
link <- 'https://food.list.co.uk/place/22191-brewhemia-edinburgh/'
read_html(link)
read_html(link) %>% html_nodes('li')
webpage = read_html(url)
webpage %>% html_nodes("button")
webpage = read_html(url)
webpage %>% html_nodes(css="#page")
webpage = read_html(url)
webpage %>% html_nodes(css=".color-swatch")
webpage = read_html(url)
webpage %>% html_nodes(css=".color-swatch color-swatch-flat")
webpage = read_html(url)
webpage %>% html_nodes(".color-swatch")
webpage = read_html(url)
webpage %>% rvest::html_nodes(".color-swatch")
webpage = read_html(url)
webpage %>% html_nodes("button.color-swatch")
webpage = read_html(url)
webpage %>% html_nodes("button.color-swatch.color-swatch-flat")
webpage = read_html(url)
webpage %>% html_nodes("button.color-swatch.color-swatch-flat") %>% html_text()
webpage = read_html(url)
webpage %>% %>% html_text()
webpage = read_html(url)
webpage %>% html_text()
read_html(link) %>% html_nodes('li')
read_html(link) %>% html_nodes('li') %>% html_nodes('script')
read_html(link) %>% html_nodes('li') %>% html_nodes('script') %>% html_text()
link <- 'https://food.list.co.uk/place/22191-brewhemia-edinburgh/'
#Read the html page content and extract all javascript codes that are inside a list
emailjs <- read_html(link) %>% html_nodes('li') %>% html_nodes('script') %>% html_text()
# Create a new v8 context
ct <- v8()
#parse the html content from the js output and print it as text
read_html(ct$eval(gsub('document.write','',emailjs))) %>%
html_text()
webpage = read_html("https://www.valspar.com/en/colors/browse-colors")
webpage
webpage %>% html_nodes(css="div.color-swatch")
i - 1
i = 1
webpage = read_html(paste0(url,i) )
webpage = read_html(url)
read_html(paste0(url,i) )
url = "https://www.valspar.com/en/colors/browse-colors?pg="
webpage = read_html(paste0(url,i) )
webpage = read_html(url)
webpage = webpage %>% html_nodes(css="div.color-swatch")
webpage
webpage = read_html(paste0(url,i) )
webpage = read_html(url)
webpage = webpage %>% html_nodes(css="div.color-swatch")
webpage
webpage = read_html(paste0(url,i) )
webpage = read_html(url)
webpage %>% html_nodes(css="div.color-swatch") %>% html_attr("background-color")
webpage %>% html_nodes(css="div.color-swatch")
webpage %>% html_nodes(css="div.color-swatch") %>% html_style("background-color")
names = webpage %>% html_nodes(css="div.color-name")
names
names = gsub("<div class="color-name">", "", names)
names
names = webpage %>% html_nodes(css="div.color-name")
names = gsub("<div class=\"color-name\">", "", names)
names
webpage = read_html(paste0(url,i) )
webpage = read_html(url)
colors = webpage %>% html_nodes(css="div.color-swatch") %>% html_style("background-color")
names = webpage %>% html_nodes(css="div.color-name")
names = gsub("<div class=\"color-name\">", "", names)
names = gsub("</div>", "", names)
names
colors
colors = webpage %>% html_nodes(css="div.color-swatch")
colors
colors = webpage %>% html_nodes(css="div.color-swatch")
colors = gsub("<div class=\"color-swatch\" style=\"background-color: ", "", colors)
colors = gsub("</div>", "", colors)
colors
webpage
colors = webpage %>% html_nodes(css="div.color-swatch")
colors = gsub("<div class=\"color-swatch\" style=\"background-color: ", "", colors)
colors = gsub(";\"></div>", "", colors)
colors
head(total)
webpage = read_html(paste0(url,i) )
webpage = read_html(url)
colors = webpage %>% html_nodes(css="div.color-swatch")
colors = gsub("<div class=\"color-swatch\" style=\"background-color: rgb(", "", colors)
colors = webpage %>% html_nodes(css="div.color-swatch")
colors = gsub("<div class=\"color-swatch\" style=\"background-color: rgb\(", "", colors)
colors = gsub("\;\"></div>", "", colors)
colors = webpage %>% html_nodes(css="div.color-swatch")
colors = gsub("<div class=\"color-swatch\" style=\"background-color: rgb\(", "", colors)
colors = webpage %>% html_nodes(css="div.color-swatch")
gsub("<div class=\"color-swatch\" style=\"background-color: rgb(", "", colors)
colors = webpage %>% html_nodes(css="div.color-swatch")
colors = gsub("<div class=\"color-swatch\" style=\"background-color: ", "", colors)
colors = gsub(";\"></div>", "", colors)
colors
gsub("rgb(", "", colors)
gsub("rgb\(", "", colors)
colors = gsub("rgb", "", colors)
colors
gsub("(", "", colors)
gsub("()", "", colors)
gsub("\()", "", colors)
gsub("\\(", "", colors)
colors = webpage %>% html_nodes(css="div.color-swatch")
colors = gsub("<div class=\"color-swatch\" style=\"background-color: rgb\\(", "", colors)
colors = gsub("\\);\"></div>", "", colors)
colors
strsplit(colors, ",")
sapply(strsplit(colors, ","), function(x)
rgb(x[1], x[2], x[3], maxColorValue=255))
colors = sapply(strsplit(colors, ","), function(x)
rgb(x[1], x[2], x[3], maxColorValue=255))
url = "https://www.valspar.com/en/colors/browse-colors?pg="
paintColors = function(url){
allData = list()
for(i in 1:59){
print(i)
webpage = read_html(paste0(url,i) )
webpage = read_html(url)
colors = webpage %>% html_nodes(css="div.color-swatch")
colors = gsub("<div class=\"color-swatch\" style=\"background-color: rgb\\(", "", colors)
colors = gsub("\\);\"></div>", "", colors)
colors = sapply(strsplit(colors, ","), function(x)
rgb(x[1], x[2], x[3], maxColorValue=255))
names = webpage %>% html_nodes(css="div.color-name")
names = gsub("<div class=\"color-name\">", "", names)
names = gsub("</div>", "", names)
allData[[i]] = data.frame(colors, names)
}
allData = rbindlist(allData)
return(allData)
}
paintColors(url)
paintcolors = paintColors(url)
write.csv(paintcolors, "paintcolors.txt", row.names = FALSE)
setwd("/Users/nancyorgan/Documents/Nail-Polish/")
write.csv(paintcolors, "paintcolors.txt", row.names = FALSE)
write.csv(paintcolors, "paintcolors.csv", row.names = FALSE)
i = 1
setwd("/Users/nancyorgan/Documents/Nail-Polish/")
url = "https://www.valspar.com/en/colors/browse-colors?pg="
i  = 1
dev.off()
dev.off()
